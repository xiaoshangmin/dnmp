version: "3.8"
services:
  php:
    image: ${PHP_VERSION}
    container_name: php
    restart: always
    ports:
      - "9000:9000"
      - "9501:9501"
    volumes:
      - ${PHP_CONF_DIR}/php.ini:/usr/local/etc/php/php.ini:ro
      - ${PHP_CONF_DIR}/php-fpm.conf:/usr/local/etc/php-fpm.d/www.conf:ro
      - ${DATA_DIR}/composer:/tmp/composer
      - ./logs/php:/var/log/php:rw
      - ./www:/var/www/html:rw
    environment:
      TZ: "${TIMEZONE}"
    networks: 
      - "default"
  openresty:
    image: ${OPENRESTY_VERSION}
    container_name: openresty
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - ./nginx/conf.d/:/etc/nginx/conf.d/:rw
      - ./nginx/cert:/etc/nginx/cert:ro
      - ./logs/nginx:/var/log/nginx:rw
      - ./www:/var/www/html:rw
    environment:
      TZ: "${TIMEZONE}"
    networks: 
      - "default"
  mysql:
    image: ${MYSQL_VERSION}
    container_name: mysql
    restart: always
    command:
      - '--character-set-server=utf8mb4'
    ports:
      - "3306:3306"
    volumes:
      - ./mysql5/conf.d:/etc/mysql/conf.d
      - ./data/mysql5:/var/lib/mysql:rw
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: "${TIMEZONE}"
    networks: 
      - "default"
  redis:
    image: ${REDIS_VERSION}
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data:rw
      - ./redis/redis.conf:/etc/redis.conf:ro
    environment:
      TZ: "${TIMEZONE}"
    networks: 
      - "default"
  # rabbitmq:
  #   image: xiaoshangmin/rabbitmq
  #   container_name: rabbitmq
  #   restart: always
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   volumes:
  #     - ./data/rabbitmq:/var/lib/rabbitmq/mnesia:rw
  #     - ./logs/rabbitmq:/var/log/rabbitmq:rw
  #     - ./rabbitmq/etc/:/etc/rabbitmq:rw
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=admin
  #     - RABBITMQ_DEFAULT_PASS=admin
  #   networks: 
  #     - "default"
  # elasticsearch:
  #   image: elasticsearch:7.9.3
  #   container_name: elasticsearch
  #   hostname: elasticsearch
  #   volumes: 
  #     - ./data/esdata:/usr/share/elasticsearch/data:rw
  #     - ./elk/es/plugins:/usr/share/elasticsearch/plugins:rw
  #     - ./elk/es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
  #   environment:
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - "default"
  # filebeat:
  #   image: elastic/filebeat:7.9.3
  #   container_name: filebeat
  #   user: root
  #   volumes:
  #     - ./elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro 
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro 
  #   networks:
  #     - "default"
  #   depends_on:
  #     - "logstash"
  # logstash:
  #   image: logstash:7.9.3
  #   container_name: logstash
  #   hostname: logstash
  #   volumes:
  #     - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
  #     - ./elk/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
  #   environment:
  #     LS_JAVA_OPTS: -Xmx1g -Xms1g
  #   ports:
  #     - "5044:5044"
  #     - "5000:5000/tcp"
  #     - "5000:5000/udp"
  #     - "9600:9600"
  #   networks:
  #     - "default"
  # kibana:
  #   image: kibana:7.9.3
  #   container_name: kibana
  #   hostname: kibana
  #   volumes:
  #     - ./elk/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
  #   ports:
  #     - "5601:5601"
  #   environment: 
  #     I18N_LOCALE: "zh-CN" 
  #     elasticsearch.hosts: http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   networks: 
  #     - "default"
networks:
  default: